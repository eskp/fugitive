fugitive README file

<h2>Info</h2>
<p>
  fugitive is a blog engine running on top of git using hooks to generate
  static html pages and thus having only git as dependency.
</p>

<h2>Install</h2>

<h3>Build</h3>
<p>
  If you want to build fugitive from the source, clone the git repository:
  <br />
  <code>git clone git://gitorious.org/fugitive/fugitive.git fugitive</code>
  <br />
  Then go in the newly created directory: <code>cd fugitive</code>, and
  run the build script: <code>./build.sh</code>.
  <br />
  This will generate an executable file &quot;fugitive&quot;.
</p>
<h3>Create a blog</h3>
<p>
  If you have the &quot;fugitive&quot; executable file and want to start a new
  blog: Run <code>fugitive --install &lt;dir&gt;</code>.
  <br />
  This will create the git repos with appropriate hooks and files in
  &lt;dir&gt;.
  <br />
  If &lt;dir&gt; isn't specified then the current working directory is used.
<p>
<p>
  <strong>NOTE:</strong> You need to use the same process to install any remote
  repository where you'd like to push your blog.
</p>
<h3>Update</h3>
<p>
  Run <code>fugitive --install-hooks &lt;dir&gt;</code>.<br />
  This will only (re)install fugitive hooks scripts.<br />
  If &lt;dir&gt; isn't specified then the current working directory is used.
</p>

<h2>Configuration</h2>

<p>
  There are three paths in the &quot;fugitive&quot; section of the git config:
</p>
<ul>
  <li>
    <em>public-dir</em> is the path to the directory that will contain the
    generated html files. Defautlt value is &quot;.&quot;, the root of the git
    repository. You could set it to &quot;blog&quot; for instance if you
    already have a static website under your git repos.
  </li>
  <li>
    <em>articles-dir</em> is the path where fugitive will look for published
    articles. Default value is &quot;_articles&quot;. This path is relative to
    the root of the git repository, must be in it and must not start with
    &quot;.&quot;.
  </li>
  <li>
    <em>templates-dire</em> is the path where fugitive will look for templates
    files. Default value is &quot;_templates&quot;. This path is relative to
    the root of the git repository, must be in it and must not start with
    &quot;.&quot;.
  </li>
</ul>
<p>
  <strong>NOTE:</strong> You must NOT put a trailing '/' at the end of any of
  those paths.
</p>
<p>
  If you want your article to be preprocessed by an external tool (markdown,
  textile...) you need to set <em>preproc</em> to a command line that will take
  the file path as argument and write to stdout.
</p>

<h2>Usage</h2>

<h3>General use</h3>
<p>
  Article you want to publish should be file without the .html extension in the
  <em>articles-dir</em> directory (see CONFIGURATION).
</p>
<p>
  The first line of the file will be used as title and the rest of the file as
  the content.
</p>
<p>
  <strong>/!\ WARNINGS:</strong><br />
  DO NOT CREATE AN ARTICLE FILE NAMED &quot;archives&quot;.<br />
  DO NOT CREATE AN ARTICLE FILE NAMED &quot;index&quot;.
</p>
<h3>Template system</h3>
<p><em>*TODO*</em></p>
